Create: employee
CREATE TABLE `thanos`.`employee` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `full_name` VARCHAR(45) NOT NULL,
  `mobile` VARCHAR(45) NULL,
  `joining_time` DATETIME NOT NULL,
  `spouse_full_name` VARCHAR(45) NULL,
  `spouse_employee_id` VARCHAR(45) NULL,
  `centre` VARCHAR(45) NOT NULL,
  `status` INT NOT NULL,
  PRIMARY KEY (`id`, `centre`));


Insert: employee
INSERT INTO `thanos`.`employee`
(`id`,`full_name`,`mobile`,`joining_time`,`spouse_full_name`,`spouse_employee_id`,`centre`,`status`)
VALUES
(<{id: }>,<{full_name: }>,<{mobile: }>,<{joining_time: }>,<{spouse_full_name: }>,<{spouse_employee_id: }>,<{centre: }>,<{status: }>);

Create: outstanding_amount
CREATE TABLE `outstanding_amount` (
  `employee_id` int(11) NOT NULL,
  `centre_id` int(11) NOT NULL,
  `outstanding_amount` decimal(12,2) NOT NULL,
  PRIMARY KEY (`employee_id`,`centre_id`)
)

Create: centre
CREATE TABLE `centre` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(60) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `name_UNIQUE` (`name`)
)

Create: wages_activity
CREATE TABLE `wages_activity` (
  `wages_activity_key` bigint(20) NOT NULL,
  `employee_id` int(11) NOT NULL,
  `time_created` datetime NOT NULL,
  `centre_id` int(11) NOT NULL,
  `activity_id` int(11) NOT NULL,
  `linked_activity_id` int(11) NOT NULL,
  `type` int(11) NOT NULL,
  `status` int(11) NOT NULL,
  `item_id` int(11) DEFAULT NULL,
  `item_name` varchar(60) DEFAULT NULL,
  `due_per_item` decimal(12,2) DEFAULT NULL,
  `item_quantity` int(11) DEFAULT NULL,
  `total_amount` decimal(12,2) NOT NULL,
  `changed` tinyint(4) DEFAULT '0',
  `misc_info` blob,
  `time_updated` datetime DEFAULT NULL,
  `actor_employee_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`wages_activity_key`,`employee_id`)
)

Create: group_wages_activity
CREATE TABLE `thanos`.`group_wages_activity` (
  `activity_id` INT NOT NULL,
  `linked_activity_id` INT NOT NULL,
  `time_created` DATETIME NOT NULL,
  `centre_id` INT NOT NULL,
  `status` INT NOT NULL,
  `changed` TINYINT NULL,
  `item_id` INT NULL,
  `item_name` VARCHAR(60) NULL,
  `due_per_item` DECIMAL(12,2) NULL,
  `item_quantity` INT NULL,
  `total_amount` DECIMAL(12,2) NOT NULL,
  `misc_info` VARCHAR(1200) NULL,
  `actor_employee_id` INT NULL,
  `time_updated` DATETIME NULL,
  PRIMARY KEY (`activity_id`, `centre_id`));
  
  Create: item_fact
  CREATE TABLE `thanos`.`new_table` (
  `id` BIGINT(20) NOT NULL,
  `time_created` DATETIME NOT NULL,
  `centre_id` INT NOT NULL,
  `actor_full_name` VARCHAR(45) NULL,
  `quantity` INT NOT NULL,
  `actual_sale_price` DECIMAL(12,2) NULL,
  `activity_id` BIGINT(20) NULL,
  `type` INT NOT NULL,
  `reason` INT NOT NULL,
  `notes` VARCHAR(75) NULL,
  PRIMARY KEY (`id`));

ALTER TABLE `thanos`.`new_table` 
CHANGE COLUMN `actual_sale_price` `actual_sale_price` DECIMAL(12,2) NULL DEFAULT 0 , RENAME TO  `thanos`.`item_fact` ;


Create: settlement
CREATE TABLE `thanos`.`settlement` (
  `id` INT NOT NULL,
  `centre_id` VARCHAR(45) NULL,
  `time` DATETIME NOT NULL,
  `amount_before` DECIMAL(10,2) NOT NULL,
  `amount` DECIMAL(10,2) NOT NULL,
  `amount_after` DECIMAL(10,2) NOT NULL,
  `actor` INT NULL,
  `counterparty` INT NULL,
  `correction` TINYINT(1) NULL DEFAULT 0,
  `notes` VARCHAR(100) NULL,
  PRIMARY KEY (`id`));

